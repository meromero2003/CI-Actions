name: Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    # Uso de servicios se da a nivel de jobs
    # Practicamente un contenedor de doker, se puede usar docker hub para buscar iamgenes
    services: 
      # Se define referente a contenedor a utilizar, similar a docker compose
      # se define identificador (se instala)
      redis:
        # propiedades
        image: redis
        # mapeo de puertos
        ports: 
          - 6379:6379

    steps:
      # # Como conectar al servicio
      # - name: Install redis cli
      # # Instala apartado de redis para podernos conectar
      #   run: sudo apt-get update -y && sudo apt-get install redis-tools -y

      # - name: test redis
      #   # usar redis cli para ocnectarnos al servicio
      #   run: redis-cli -h localhost -p 6379 ping 

      - name: Print Variable
        run: echo "${{ secrets.TOKEN_SECRET }}"

      - name: Chekout
        # Posiciona dentro del directorio
        uses: actions/checkout@v4

      # Configuracion de la app
      - name: setup
        # Se utiliza un action para la instalacion de node o php, o lo que se utilice
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: npm install

      - name: Run test
        # Se hace test para valirdar que los cambios no rompan lo que esta en producicion
        run: npm run test

      - name: Build page
        # Genera artefacto
        run: npm run build
      
      - name: Upload Artifact
        # Action para subir el artefacto creado con el build
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/ 
      
  
  deploy:
  # condicional con always (fuerza a que se ejecute a pesar de que build fallo)/succed/failure
    # if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: build

  # Hya acciones que necesitan modificar cosas, por lo que hay que dar los permisos para dichos cambios
    permissions:
      pages: write #to deploy to pages
      id-token: write #to verify the deployment originates from an appropiate source

    # Necesario para usar el deploy pages
    environment:
      name: github-pages
      url: ${{ steps.deployment-pages.output.page_url }}

    steps:
      - name: Deploy
        id: deployment-pages
        # Despliega la pagina que subimos anteriormente a git hub pages
        uses: actions/deploy-pages@v4
        
